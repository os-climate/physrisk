[project]
name = "physrisk-lib"
# Could test changing the below to be sourced "dynamically"
# dynamic = ['version']
version = "1.2.2"
description = "OS-Climate Physical Risk Library"
authors = [
    {name = "Joe Moorhouse",email = "5102656+joemoorhouse@users.noreply.github.com"},
]
requires-python = ">=3.10"
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["Physical", "Climate", "Risk", "Finance"]

classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.10",
  "Topic :: Office/Business :: Financial",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development",
]

dependencies = [
    "affine>=2.4.0",
    "dependency-injector>=4.48.0",
    "geopandas>=1.1.0",
    "h3>=4.3.0",
    "lmdbm>=0.0.6",
    "numba>=0.61.0",
    "numpy>=2.2.0",
    "pint>=0.24.0",
    "pillow>=11.3.0",
    "pydantic>=2.11.0",
    "pyproj>=3.7.0",
    "python-dotenv>=1.1.0",
    "requests>=2.32.0",
    "scipy>=1.15.0",
    "shapely>=2.1.0",
    "s3fs>=2025.7.0",
    "zarr>=2.18.0,<3.0.0",
]

[project.urls]
Homepage = "https://github.com/os-climate/physrisk"
Repository = "https://github.com/os-climate/physrisk"
Downloads = "https://github.com/os-climate/physrisk/releases"
"Bug Tracker" = "https://github.com/os-climate/physrisk/issues"
Documentation = "https://github.com/os-climate/physrisk/tree/main/docs"
"Source Code" = "https://github.com/os-climate/physrisk"

[build-system]
requires = [
    "setuptools>=42",
    "wheel"
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["physrisk*"]

[tool.setuptools.package-data]
physrisk = [
    "data/ne_110m_admin_0_countries/ne_*.*",
    "data/ne_110m_admin_0_countries/country_codes.tsv",
    "data/static/*.json",
    "data/static/example_portfolios/*.json",
    "data/static/hazard/*.json",
    "data/static/vulnerability/*.json"
]

[dependency-groups]
test = [
    "pytest",
    "pytest-cov",
    "openpyxl>=3.1.5",
]
doc = [
    "graphviz==0.21",
    "myst-nb==1.3.0",
    "nbsphinx==0.9.5",
    "numpydoc==1.9.0",
    "pandoc==2.4",
    "plotly>=6.0.0",
    "pydata-sphinx-theme==0.15.4",
    "setuptools<81",
    "sphinx==7.4.7",
    "sphinx-autodoc-typehints==2.3.0",
    "sphinx-copybutton==0.5.2",
    "sphinx-design==0.6.1",
    "sphinx-jinja2-compat==0.3.0",
    "sphinx-prompt==1.8.0",
    "sphinx-rtd-theme==2.0.0",
    "sphinx-simplepdf==1.6.0",
    "sphinx-tabs==3.4.5",
    "sphinx-toggleprompt==0.5.2",
    "sphinx-toolbox==3.8.0",
    "sphinxcontrib-applehelp==2.0.0",
    "sphinxcontrib-bibtex==2.6.3",
    "sphinxcontrib-details-directive==0.1.0",
    "sphinxcontrib-devhelp==2.0.0",
    "sphinxcontrib-htmlhelp==2.1.0",
    "sphinxcontrib-jquery==4.1",
    "sphinxcontrib-jsmath==1.0.1",
    "sphinxcontrib-qthelp==2.0.0",
    "sphinxcontrib-serializinghtml==2.0.0",
]
dev = [
    "mypy",
    "pre-commit",
    "ruff",
    "tox"
]

[tool.pytest.ini_options]
testpaths = "tests"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.mypy]
warn_unreachable = true
ignore_missing_imports = true

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]
# relative_files = true

[tool.coverage.report]
# Note: Set low for this repository
# Recommend setting a value > 90%
fail_under = 75
skip_empty = true
ignore_errors = true
show_missing = true
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "pass",
  "raise ImportError",
]

[tool.coverage.html]
directory = "coverage_html_report"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
extend-fixable = [
    # Instead of trailing-whitespace
    "W291", "W293"
    ]

extend-select = [
    # Instead of pydocstyle
    "D",
    #Instead of flake8
    "E", "F","B",
    # Instead of pep8-naming
    "N",
    # Instead of flake8-debugger or debug-statements
    "T10",
]

ignore = [
    "B905",
    "E203",
    "E501",
    # Avoid incompatible rules
    "D203",
    "D213",

    # Ignore this rules so that precommit passes. Uncomment to start fixing them
    "B006", "B008", "B904", "B012", "B024",
    "D",
]

[tool.ruff.lint.extend-per-file-ignores]
# Ignore `D` rules everywhere except for the `src/` directory.
"!src/**.py" = ["D"]

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.uv]
default-groups = ["dev", "test", "doc"]
